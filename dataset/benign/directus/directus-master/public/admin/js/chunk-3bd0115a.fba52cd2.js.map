{"version":3,"sources":["webpack:///./src/interfaces/numeric/display.vue?6da3","webpack:///src/interfaces/numeric/display.vue","webpack:///./src/interfaces/numeric/display.vue?1095","webpack:///./src/interfaces/numeric/display.vue","webpack:///./node_modules/@directus/extension-toolkit/mixins/interface.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","options","staticClass","_v","_s","$n","value","staticRenderFns","component","module","exports","props","id","type","String","required","name","default","length","Number","readonly","Boolean","collection","primaryKey","Object","newItem","relation","fields","values","width","val","includes"],"mappings":"yHAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAQF,EAAIM,QAAiB,UAAEF,EAAG,OAAO,CAACG,YAAY,WAAW,CAACP,EAAIQ,GAAGR,EAAIS,GAAGT,EAAIU,GAAGV,EAAIW,WAAWP,EAAG,OAAO,CAACG,YAAY,WAAW,CAACP,EAAIQ,GAAGR,EAAIS,GAAGT,EAAIW,WAChPC,EAAkB,G,qBCOtB,GACA,cCTgW,I,YCO5VC,EAAY,eACd,EACAd,EACAa,GACA,EACA,KACA,KACA,MAIa,aAAAC,E,8BClBfC,EAAOC,QAAU,CACfC,MAAO,CAILC,GAAI,CACFC,KAAMC,OACNC,UAAU,GAGZC,KAAM,CACJH,KAAMC,OACNC,UAAU,GAIZT,MAAO,CACLO,KAAM,KACNI,QAAS,MAGXJ,KAAM,CACJA,KAAMC,OACNC,UAAU,GAGZG,OAAQ,CACNL,KAAM,CAACC,OAAQK,QACfF,QAAS,MAGXG,SAAU,CACRP,KAAMQ,QACNJ,SAAS,GAGXK,WAAY,CACVT,KAAMC,OACNG,QAAS,MAGXM,WAAY,CACVV,KAAM,CAACM,OAAQL,QACfG,QAAS,MAGXF,SAAU,CACRF,KAAMQ,QACNJ,SAAS,GAGXhB,QAAS,CACPY,KAAMW,OACNP,QAAS,KAAM,KAGjBQ,QAAS,CACPZ,KAAMQ,QACNJ,SAAS,GAIXS,SAAU,CACRb,KAAMW,OACNP,QAAS,MAGXU,OAAQ,CACNd,KAAMW,OACNP,QAAS,MAIXW,OAAQ,CACNf,KAAMW,OACNP,QAAS,MAEXY,MAAO,CACLhB,KAAMC,OACNG,QAAS,KACT,UAAUa,GACR,MAAO,CACL,OACA,YACA,aACA,OACA,QACAC,SAASD","file":"js/chunk-3bd0115a.fba52cd2.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (_vm.options.localized)?_c('span',{staticClass:\"no-wrap\"},[_vm._v(_vm._s(_vm.$n(_vm.value)))]):_c('span',{staticClass:\"no-wrap\"},[_vm._v(_vm._s(_vm.value))])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n\t<span v-if=\"options.localized\" class=\"no-wrap\">{{ $n(value) }}</span>\n\t<span v-else class=\"no-wrap\">{{ value }}</span>\n</template>\n\n<script>\nimport mixin from '@directus/extension-toolkit/mixins/interface';\n\nexport default {\n\tmixins: [mixin]\n};\n</script>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./display.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./display.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./display.vue?vue&type=template&id=6c23ce9d&\"\nimport script from \"./display.vue?vue&type=script&lang=js&\"\nexport * from \"./display.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","module.exports = {\n  props: {\n    // Unique id for this interface. Should be added to the lower level \n    // HTML input element if applicable. This ID will be used in the label's\n    // `for` attribute\n    id: {\n      type: String,\n      required: true\n    },\n    // Name of the field\n    name: {\n      type: String,\n      required: true\n    },\n    // The current value. This can either be the default value, the saved database\n    // value or the current state after the user made an edit\n    value: {\n      type: null,\n      default: null\n    },\n    // Type of the field, eg `string`, `hash`, or `array`\n    type: {\n      type: String,\n      required: true\n    },\n    // Max length\n    length: {\n      type: [String, Number],\n      default: null\n    },\n    // If the field is readonly or not\n    readonly: {\n      type: Boolean,\n      default: false\n    },\n    // Name of the collection\n    collection: {\n      type: String,\n      default: null\n    },\n    // Primary key of the item you're editing in this context\n    primaryKey: {\n      type: [Number, String],\n      default: null\n    },\n    // If the field is required or not\n    required: {\n      type: Boolean,\n      default: false\n    },\n    // Field options. A json object based on the interface's meta.json file\n    options: {\n      type: Object,\n      default: () => ({})\n    },\n    // If the item that's currently being edited is new\n    newItem: {\n      type: Boolean,\n      default: false\n    },\n    // The relation of the current field. Will contain information on the related\n    // collection and field(s)\n    relation: {\n      type: Object,\n      default: null\n    },\n    // The other fields in the current edit page\n    fields: {\n      type: Object,\n      default: null\n    },\n    // The values of the other fields on the edit page. Can be used for things like\n    // automatically generating a slug based on another field\n    values: {\n      type: Object,\n      default: null\n    },\n    width: {\n      type: String,\n      default: null,\n      validator(val) {\n        return [\n          'half',\n          'half-left',\n          'half-right',\n          'full',\n          'fill'\n        ].includes(val);\n      }\n    }\n  }\n};\n"],"sourceRoot":""}