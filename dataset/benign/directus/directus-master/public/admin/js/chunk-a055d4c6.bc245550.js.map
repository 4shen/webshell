{"version":3,"sources":["webpack:///./src/interfaces/language/input.vue?205f","webpack:///src/interfaces/language/input.vue","webpack:///./src/interfaces/language/input.vue?da23","webpack:///./src/interfaces/language/input.vue","webpack:///./node_modules/@directus/extension-toolkit/mixins/interface.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","$t","value","readonly","on","$event","$emit","_l","name","code","key","domProps","_v","_s","staticRenderFns","component","module","exports","props","id","type","String","required","default","length","Number","Boolean","collection","primaryKey","options","Object","newItem","relation","fields","values","width","val","includes"],"mappings":"yHAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,kBAAkB,CAACE,MAAM,CAAC,YAAcN,EAAIO,GAAG,uCAAuC,MAAQP,EAAIQ,MAAM,SAAWR,EAAIS,UAAUC,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOX,EAAIY,MAAM,QAASD,MAAWX,EAAIa,GAAIb,EAAa,WAAE,SAASc,EAAKC,GAAM,OAAOX,EAAG,SAAS,CAACY,IAAID,EAAKE,SAAS,CAAC,MAAQF,IAAO,CAACf,EAAIkB,GAAG,IAAIlB,EAAImB,GAAGL,GAAM,UAAS,IACraM,EAAkB,G,iCCgBtB,GACA,aACA,UACA,UADA,WAEA,0BACA,8BAGA,KCzB8V,I,YCO1VC,EAAY,eACd,EACAtB,EACAqB,GACA,EACA,KACA,WACA,MAIa,aAAAC,E,8BClBfC,EAAOC,QAAU,CACfC,MAAO,CAILC,GAAI,CACFC,KAAMC,OACNC,UAAU,GAGZd,KAAM,CACJY,KAAMC,OACNC,UAAU,GAIZpB,MAAO,CACLkB,KAAM,KACNG,QAAS,MAGXH,KAAM,CACJA,KAAMC,OACNC,UAAU,GAGZE,OAAQ,CACNJ,KAAM,CAACC,OAAQI,QACfF,QAAS,MAGXpB,SAAU,CACRiB,KAAMM,QACNH,SAAS,GAGXI,WAAY,CACVP,KAAMC,OACNE,QAAS,MAGXK,WAAY,CACVR,KAAM,CAACK,OAAQJ,QACfE,QAAS,MAGXD,SAAU,CACRF,KAAMM,QACNH,SAAS,GAGXM,QAAS,CACPT,KAAMU,OACNP,QAAS,KAAM,KAGjBQ,QAAS,CACPX,KAAMM,QACNH,SAAS,GAIXS,SAAU,CACRZ,KAAMU,OACNP,QAAS,MAGXU,OAAQ,CACNb,KAAMU,OACNP,QAAS,MAIXW,OAAQ,CACNd,KAAMU,OACNP,QAAS,MAEXY,MAAO,CACLf,KAAMC,OACNE,QAAS,KACT,UAAUa,GACR,MAAO,CACL,OACA,YACA,aACA,OACA,QACAC,SAASD,Q","file":"js/chunk-a055d4c6.bc245550.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-simple-select',{attrs:{\"placeholder\":_vm.$t('interfaces.language.select_language'),\"value\":_vm.value,\"disabled\":_vm.readonly},on:{\"input\":function($event){return _vm.$emit('input', $event)}}},_vm._l((_vm.languages),function(name,code){return _c('option',{key:code,domProps:{\"value\":code}},[_vm._v(\" \"+_vm._s(name)+\" \")])}),0)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n\t<v-simple-select\n\t\t:placeholder=\"$t('interfaces.language.select_language')\"\n\t\t:value=\"value\"\n\t\t:disabled=\"readonly\"\n\t\t@input=\"$emit('input', $event)\"\n\t>\n\t\t<option v-for=\"(name, code) in languages\" :key=\"code\" :value=\"code\">\n\t\t\t{{ name }}\n\t\t</option>\n\t</v-simple-select>\n</template>\n\n<script>\nimport mixin from '@directus/extension-toolkit/mixins/interface';\nimport allLanguages from './languages.json';\n\nexport default {\n\tmixins: [mixin],\n\tcomputed: {\n\t\tlanguages() {\n\t\t\tif (this.options.limit) {\n\t\t\t\treturn this.$i18n.availableLanguages;\n\t\t\t}\n\n\t\t\treturn allLanguages;\n\t\t}\n\t}\n};\n</script>\n\n<style lang=\"scss\" scoped></style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./input.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./input.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./input.vue?vue&type=template&id=7f343a8e&scoped=true&\"\nimport script from \"./input.vue?vue&type=script&lang=js&\"\nexport * from \"./input.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"7f343a8e\",\n  null\n  \n)\n\nexport default component.exports","module.exports = {\n  props: {\n    // Unique id for this interface. Should be added to the lower level \n    // HTML input element if applicable. This ID will be used in the label's\n    // `for` attribute\n    id: {\n      type: String,\n      required: true\n    },\n    // Name of the field\n    name: {\n      type: String,\n      required: true\n    },\n    // The current value. This can either be the default value, the saved database\n    // value or the current state after the user made an edit\n    value: {\n      type: null,\n      default: null\n    },\n    // Type of the field, eg `string`, `hash`, or `array`\n    type: {\n      type: String,\n      required: true\n    },\n    // Max length\n    length: {\n      type: [String, Number],\n      default: null\n    },\n    // If the field is readonly or not\n    readonly: {\n      type: Boolean,\n      default: false\n    },\n    // Name of the collection\n    collection: {\n      type: String,\n      default: null\n    },\n    // Primary key of the item you're editing in this context\n    primaryKey: {\n      type: [Number, String],\n      default: null\n    },\n    // If the field is required or not\n    required: {\n      type: Boolean,\n      default: false\n    },\n    // Field options. A json object based on the interface's meta.json file\n    options: {\n      type: Object,\n      default: () => ({})\n    },\n    // If the item that's currently being edited is new\n    newItem: {\n      type: Boolean,\n      default: false\n    },\n    // The relation of the current field. Will contain information on the related\n    // collection and field(s)\n    relation: {\n      type: Object,\n      default: null\n    },\n    // The other fields in the current edit page\n    fields: {\n      type: Object,\n      default: null\n    },\n    // The values of the other fields on the edit page. Can be used for things like\n    // automatically generating a slug based on another field\n    values: {\n      type: Object,\n      default: null\n    },\n    width: {\n      type: String,\n      default: null,\n      validator(val) {\n        return [\n          'half',\n          'half-left',\n          'half-right',\n          'full',\n          'fill'\n        ].includes(val);\n      }\n    }\n  }\n};\n"],"sourceRoot":""}