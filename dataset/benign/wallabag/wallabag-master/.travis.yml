os: linux
dist: xenial
language: php

services:
    - mysql
    - postgresql
    - rabbitmq
    - redis

# cache vendor dirs
cache:
    apt: true
    directories:
        - $HOME/.composer/cache/files
        - node_modules
        - $HOME/.npm
        - $HOME/.yarn-cache

if: |
    type = pull_request OR \
    branch = master

php:
    - 7.2
    - 7.3
    - 7.4

node_js:
    - "5"

env:
    - DB=mysql
    - DB=pgsql
    - DB=sqlite

jobs:
    fast_finish: true
    include:
        - php: 7.3
          env: CS_FIXER=run VALIDATE_TRANSLATION_FILE=run ASSETS=build DB=sqlite

# exclude v1 branches
branches:
    except:
        - legacy

before_install:
    - if [[ $TRAVIS_REPO_SLUG = wallabag/wallabag ]]; then cp .composer-auth.json ~/.composer/auth.json; fi;
    - PHP=$TRAVIS_PHP_VERSION
    - echo "memory_limit=-1" >> ~/.phpenv/versions/$(phpenv version-name)/etc/conf.d/travis.ini
    - phpenv config-rm xdebug.ini || echo "xdebug not available"
    # install imagick
    - pear config-set preferred_state beta
    - pecl channel-update pecl.php.net
    - yes | pecl install imagick

install:
    - if [[ $ASSETS = build ]]; then source ~/.nvm/nvm.sh && nvm install 6.10; fi;
    - if [[ $ASSETS = build ]]; then npm install -g yarn@latest; fi;
    - if [[ $ASSETS = build ]]; then yarn install; fi;
    - composer install -o --no-interaction --no-progress --prefer-dist --no-suggest
    - php bin/simple-phpunit install

before_script:
    - make prepare DB=$DB
    - make fixtures

script:
    - if [[ $VALIDATE_TRANSLATION_FILE = '' ]]; then ./bin/simple-phpunit -v ; fi;
    # PHPStan needs PHPUnit to be installed and cache app to be generated
    - if [[ $CS_FIXER = run ]]; then php bin/phpstan analyse ; fi;
    - if [[ $CS_FIXER = run ]]; then php bin/php-cs-fixer fix --verbose --dry-run ; fi;
    - if [[ $VALIDATE_TRANSLATION_FILE = run ]]; then php bin/console lint:yaml src/Wallabag/CoreBundle/Resources/translations -v ; fi;
    - if [[ $VALIDATE_TRANSLATION_FILE = run ]]; then php bin/console lint:yaml app/Resources/CraueConfigBundle/translations -v ; fi;
    - if [[ $VALIDATE_TRANSLATION_FILE = run ]]; then php bin/console lint:yaml src/Wallabag/UserBundle/Resources/translations -v ; fi;
    - if [[ $ASSETS = build ]]; then yarn run build:prod; fi;
