<?xml version="1.0" encoding="UTF-8" ?>
<ruleset
    name="Zephir phpmd rules"
    xmlns="http://pmd.sf.net/ruleset/1.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://pmd.sf.net/ruleset/1.0.0 http://pmd.sf.net/ruleset_xml_schema.xsd"
    xsi:noNamespaceSchemaLocation="http://pmd.sf.net/ruleset_xml_schema.xsd"
>
    <!-- Exclude Dirs from analyzing -->
    <exclude-pattern>.zephir/*</exclude-pattern>
    <exclude-pattern>ide/*</exclude-pattern>
    <exclude-pattern>ext/*</exclude-pattern>
    <exclude-pattern>prototypes/*</exclude-pattern>
    <exclude-pattern>stub/*</exclude-pattern>
    <exclude-pattern>tests/*</exclude-pattern>
    <exclude-pattern>vendor/*</exclude-pattern>

    <!-- Code Size -->
    <rule ref="rulesets/codesize.xml/CyclomaticComplexity">
      <priority>1</priority>
      <properties>
        <property name="reportLevel" value="15"/>
      </properties>
    </rule>
    <rule ref="rulesets/codesize.xml/NPathComplexity"/>
    <rule ref="rulesets/codesize.xml/ExcessiveMethodLength"/>
    <rule ref="rulesets/codesize.xml/ExcessiveClassLength"/>
    <rule ref="rulesets/codesize.xml/ExcessiveClassComplexity"/>
    <rule ref="rulesets/codesize.xml/ExcessiveParameterList"/>
    <rule ref="rulesets/codesize.xml/ExcessivePublicCount"/>
    <rule ref="rulesets/codesize.xml/TooManyFields"/>

    <!--Clean Code rules-->
    <rule ref="rulesets/cleancode.xml/BooleanArgumentFlag"/>
    <rule ref="rulesets/cleancode.xml/ElseExpression"/>
    <rule ref="rulesets/cleancode.xml/StaticAccess">
        <priority>1</priority>
        <properties>
            <property name="exceptions">
                <value>
                    \Zephir\BaseBackend,
                    \Zephir\Compiler,
                    \Zephir\Cache\SlotsCache,
                    \Zephir\FunctionCall,
                    \Zephir\Documentation,
                    \Zephir\Expression\Builder\BuilderFactory,
                    \Zephir\Exception\CompilerException
                </value>
            </property>
        </properties>
    </rule>

    <!--Naming Rules-->
    <rule ref="rulesets/naming.xml/ConstructorWithNameAsEnclosingClass" />
    <rule ref="rulesets/naming.xml/ConstantNamingConventions" />
    <rule ref="rulesets/naming.xml/BooleanGetMethodName" />
    <rule ref="rulesets/naming.xml/ShortVariable">
        <description>
            Detects when a field, local, or parameter has a very short name.
        </description>
        <priority>1</priority>
        <properties>
            <property name="minimum"
                      description="Minimum length for a variable, property or parameter name"
                      value="2"/>
        </properties>
    </rule>
    <rule ref="rulesets/naming.xml/ShortMethodName">
        <properties>
            <property name="minimum"
                      description="Minimum length for a method or function name"
                      value="3"/>
            <property name="exceptions"
                      description="Comma-separated list of exceptions"
                      value="on,at,up"/>
        </properties>
    </rule>
    <rule ref="rulesets/naming.xml/LongVariable">
        <properties>
            <property name="maximum" value="35"/>
        </properties>
    </rule>

    <!--Controversial-->
    <rule ref="rulesets/controversial.xml"/>
    <rule ref="rulesets/controversial.xml/Superglobals" />
    <rule ref="rulesets/controversial.xml/CamelCaseClassName" />
    <rule ref="rulesets/controversial.xml/CamelCasePropertyName"/>
    <rule ref="rulesets/controversial.xml/CamelCaseMethodName"/>
    <rule ref="rulesets/controversial.xml/CamelCaseParameterName" />
    <rule ref="rulesets/controversial.xml/CamelCaseVariableName" />

    <!--Design-->
    <rule ref="rulesets/design.xml/ExitExpression"/>
    <rule ref="rulesets/design.xml/EvalExpression"/>
    <rule ref="rulesets/design.xml/GotoStatement"/>
    <rule ref="rulesets/design.xml/NumberOfChildren"/>
    <rule ref="rulesets/design.xml/DepthOfInheritance"/>
    <rule ref="rulesets/design.xml/CouplingBetweenObjects"/>
    <rule ref="rulesets/design.xml/DevelopmentCodeFragment"/>

    <!--Unused Code-->
    <rule ref="rulesets/unusedcode.xml"/>

</ruleset>
